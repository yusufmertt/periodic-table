{"version":3,"sources":["detailsPopup.module.css","DetailsPopup.js","Backdrop.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Popup","props","style","color","backgroundColor","className","styles","details","children","onClick","clicked","button","backdrop","Nav","App","state","showDetails","popup","table","tableacts","tablelanths","nonmetal","metal","transitionMetal","nobleGas","metalloid","alkaliMetal","alkaliEarthMetal","lanthanoid","actinoid","halogen","propName","fontWeight","clickHandler","index","setState","atomicNumber","name","data","electronicConfiguration","standardState","groupBlock","bondingType","meltingPoint","Math","floor","boilingPoint","density","yearDiscovered","electronegativity","atomicRadius","ionRadius","vanDelWaalsRadius","electronAffinity","popupBackground","console","log","closeHandler","this","Backdrop","DetailsPopup","i","push","bind","key","symbol","Fragment","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"u4oDACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,SAAW,+BAA+B,SAAW,iC,oPC+CtIC,EA7CD,SAACC,GACP,IAAIC,EAAQ,GACZ,OAAOD,EAAME,OACL,IAAK,eACGD,EAAQ,CAACE,gBAAkB,WAC3B,MACR,IAAK,uBACGF,EAAQ,CAACE,gBAAgB,UAAWD,MAAM,SAC1C,MACR,IAAK,QACGD,EAAQ,CAACE,gBAAgB,WACzB,MACR,IAAK,uBACGF,EAAQ,CAACE,gBAAkB,SAAUD,MAAM,SAC3C,MACR,IAAK,SACGD,EAAQ,CAACE,gBAAkB,UAAWD,MAAM,SAC5C,MACR,IAAK,SACGD,EAAQ,CAACE,gBAAkB,WAC3B,MACR,IAAK,aACGF,EAAQ,CAACE,gBAAkB,SAC3B,MACR,IAAK,WACGF,EAAQ,CAACE,gBAAkB,UAAWD,MAAM,SAC5C,MACR,IAAK,YACGD,EAAQ,CAACE,gBAAkB,OAAQD,MAAM,SACzC,MACR,IAAK,UACGD,EAAQ,CAACE,gBAAkB,UAAWD,MAAM,SAC5C,MACR,QACQD,EAAQ,CAACE,gBAAkB,aAE3C,OACK,yBAAKF,MAAOA,EAAMG,UAAWC,IAAOC,SACpC,yBAAKF,UAAWC,IAAOE,UAAWP,EAAMO,UACxC,yBAAKC,QAASR,EAAMS,QAASL,UAAWC,IAAOK,QAA/C,OC/BEX,EARD,SAACC,GACP,OACK,yBAAKQ,QAASR,EAAMS,QAAQL,UAAWC,IAAOM,YCc5CC,G,MAjBH,SAACZ,GACT,OACI,yBAAKI,UAAU,UACX,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,iBAAf,uBACA,yBAAKA,UAAU,iBAAf,mBACA,yBAAKA,UAAU,iBAAf,wBACA,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,WACA,yBAAKA,UAAU,iBAAf,YACA,yBAAKA,UAAU,kBAAf,cCkMGS,E,2MAxMbC,MAAQ,CACNC,aAAY,G,wEAEL,IA8CHC,EACAL,EA/CE,OAEFM,EAAQ,GACRC,EAAY,GACZC,EAAc,GAEZC,EAAW,CAACjB,gBAAkB,WAC9BkB,EAAQ,CAAClB,gBAAkB,WAC3BmB,EAAkB,CAACnB,gBAAkB,WACrCoB,EAAW,CAACpB,gBAAkB,WAC9BqB,EAAY,CAACrB,gBAAkB,QAC/BsB,EAAc,CAACtB,gBAAkB,WACjCuB,EAAmB,CAACvB,gBAAkB,UACtCwB,EAAa,CAACxB,gBAAkB,SAChCyB,EAAW,CAACzB,gBAAkB,WAC9B0B,EAAU,CAAC1B,gBAAkB,WAE7B2B,EAAW,CACfC,WAAa,QAGXC,EAAe,SAACC,GAElB,EAAKC,SAAS,CAACnB,aAAY,IAC3B,EAAKmB,SAAS,CAACC,aAAaF,EACbG,KAAKC,EAAKJ,EAAM,GAAGG,KACnBE,wBAAwBD,EAAKJ,EAAM,GAAGK,wBACtCC,cAAcF,EAAKJ,EAAM,GAAGM,cAC5BC,WAAWH,EAAKJ,EAAM,GAAGO,WACzBC,YAAYJ,EAAKJ,EAAM,GAAGQ,YAC1BC,aAAcC,KAAKC,MAAMP,EAAKJ,EAAM,GAAGS,aAAa,QAAW,WAC/DG,aAAcF,KAAKC,MAAMP,EAAKJ,EAAM,GAAGY,aAAa,QAAW,WAC/DC,QAAQT,EAAKJ,EAAM,GAAGa,QACtBC,eAAeV,EAAKJ,EAAM,GAAGc,eAC7BC,kBAAkBX,EAAKJ,EAAM,GAAGe,kBAChCC,aAAaZ,EAAKJ,EAAM,GAAGgB,aAC3BC,UAAUb,EAAKJ,EAAM,GAAGiB,UACxBC,kBAAkBd,EAAKJ,EAAM,GAAGkB,kBAChCC,iBAAiBf,EAAKJ,EAAM,GAAGmB,iBAC/BC,gBAAgBhB,EAAKJ,EAAM,GAAGO,aAE7Cc,QAAQC,IAAI,EAAKzC,QAEf0C,EAAe,WACjB,EAAKtB,SAAS,CAACnB,aAAY,KAI1B0C,KAAK3C,MAAMC,cACZJ,EAAU,kBAAC+C,EAAD,CAAUjD,QAAS+C,IAC7BxC,EAAQ,kBAAC2C,EAAD,CAAczD,MAAOuD,KAAK3C,MAAMuC,gBAAiB5C,QAAS+C,GAChE,0BAAMvD,MAAO6B,GAAb,sBADM,IACuC2B,KAAK3C,MAAMsB,KAAK,6BAC7D,0BAAMnC,MAAO6B,GAAb,uBAFM,IAE6C2B,KAAK3C,MAAMwB,wBAAwB,6BACtF,0BAAMrC,MAAO6B,GAAb,2BAHM,IAGiD2B,KAAK3C,MAAMyB,cAAc,6BAChF,0BAAMtC,MAAO6B,GAAb,qBAJM,IAIsC2B,KAAK3C,MAAM0B,WAAW,6BAClE,0BAAMvC,MAAO6B,GAAb,yBALM,IAKoC2B,KAAK3C,MAAM2B,YAAY,6BACjE,0BAAMxC,MAAO6B,GAAb,wBAA8C2B,KAAK3C,MAAM4B,aAAa,6BACtE,0BAAMzC,MAAO6B,GAAb,0BAPM,IAO2C2B,KAAK3C,MAAM+B,aAAa,6BACzE,0BAAM5C,MAAO6B,GAAb,mBARM,IAQoC2B,KAAK3C,MAAMgC,QAAQ,6BAC7D,0BAAM7C,MAAO6B,GAAb,oCATM,IAS2C2B,KAAK3C,MAAMiC,eAAe,6BAC3E,0BAAM9C,MAAO6B,GAAb,uBAAkD2B,KAAK3C,MAAMkC,kBAAkB,6BAC/E,0BAAM/C,MAAO6B,GAAb,uBAXM,IAWqC2B,KAAK3C,MAAMmC,aAAa,6BACnE,0BAAMhD,MAAO6B,GAAb,4BAZM,IAYqC2B,KAAK3C,MAAMoC,UAAU,6BAChE,0BAAMjD,MAAO6B,GAAb,gCAbM,IAa8C2B,KAAK3C,MAAMqC,kBAAkB,6BACjF,0BAAMlD,MAAO6B,GAAb,0BAdM,IAc2C2B,KAAK3C,MAAMsC,iBAAiB,+BAOjF,IAAI,IAAIQ,EAAE,EAAGA,EAAE,IAAKA,IAuBjB,OAAOvB,EAAKuB,GAAGpB,YAEd,IAAK,SACDvB,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOmB,EAAU2C,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SACpN,MAEJ,IAAK,eACD/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOwB,EAAasC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SACvN,MAEJ,IAAK,uBACD/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOyB,EAAkBqC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC5N,MAEJ,IAAK,SACH,OAAO3B,EAAKuB,GAAGI,QACb,IAAK,KACL/C,EAAM4C,KAAK,yBAAKzD,UAAU,qBAAqBI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAe4B,IAAK1B,EAAKuB,GAAGzB,aAAclC,MAAOsB,GAAW,0BAAMnB,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC9N,MACA,QACI/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOsB,EAAUwC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAE1N,MAEF,IAAK,uBACD/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOqB,EAAiByC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC3N,MAEJ,IAAK,UACD/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAO4B,EAASkC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SACnN,MAEJ,IAAK,YACF,OAAO3B,EAAKuB,GAAGI,QACb,IAAK,IACF/C,EAAM4C,KAAK,yBAAKzD,UAAU,oBAAoBI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOuB,EAAWuC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC7N,MACF,QACI/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOuB,EAAWuC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAE5N,MAEH,IAAK,QACD,OAAO3B,EAAKuB,GAAGI,QACb,IAAK,KACH/C,EAAM4C,KAAK,yBAAKzD,UAAU,qBAAqBI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOoB,EAAO0C,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC1N,MACF,QACE/C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAOoB,EAAO0C,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,eAAe2D,IAAK1B,EAAKuB,GAAGzB,cAAeE,EAAKuB,GAAGzB,aAAnE,QAA8FE,EAAKuB,GAAGI,SAG9O,MAEN,IAAK,aACD,OAAO3B,EAAKuB,GAAGzB,cACb,KAAK,GACHyB,EAAI,GACJ,MACF,QACE3C,EAAM4C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAO0B,EAAYoC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC5N,MAEF,IAAK,WACD,OAAO3B,EAAKuB,GAAGzB,cACb,KAAK,GACHyB,EAAI,IACJ,MACF,QACE3C,EAAM4C,KAAK,yBAAKzD,UAAU,aAAaI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAO2B,EAAUmC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAC3N,MAEF,QACE/C,EAAM4C,KAAK,yBAAKrD,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAe4B,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAKnL,IAAI,IAAIJ,EAAE,GAAIA,EAAE,GAAIA,IAClB1C,EAAU2C,KAAK,yBAAKzD,UAAU,YAAYI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAO0B,EAAYoC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAG5N,IAAI,IAAIJ,EAAE,GAAIA,EAAE,IAAKA,IACnBzC,EAAY0C,KAAK,yBAAKzD,UAAU,aAAaI,QAASwB,EAAa8B,KAAKL,KAAKpB,EAAKuB,GAAGzB,cAAelC,MAAO2B,EAAUmC,IAAK1B,EAAKuB,GAAGzB,cAAc,0BAAM/B,UAAU,gBAAgBiC,EAAKuB,GAAGzB,aAAxC,QAAmEE,EAAKuB,GAAGI,SAO7N,OACI,kBAAC,IAAMC,SAAP,KACGtD,EACD,wBAAIP,UAAU,UAAd,mBACA,yBAAKA,UAAU,SAASY,GACxB,yBAAKZ,UAAU,OAAOa,GACtB,yBAAKb,UAAU,QAAQc,GACvB,yBAAKd,UAAU,UAAUe,GACzB,kBAAC,EAAD,W,GAnMQ+C,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b43922b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"detailsPopup_details__3cPfN\",\"button\":\"detailsPopup_button__2Qv8L\",\"children\":\"detailsPopup_children__Q4z2N\",\"backdrop\":\"detailsPopup_backdrop__1Nd9C\"};","import React from 'react';\r\nimport './App.css';\r\nimport styles from \"./detailsPopup.module.css\"\r\nconst Popup = (props) => {\r\n        let style = {};\r\n        switch(props.color){\r\n                case \"alkali metal\":\r\n                        style = {backgroundColor : \"#F100A1\"}\r\n                        break;\r\n                case \"geçiş metali\":\r\n                        style = {backgroundColor:\"#DF7956\", color:\"black\"};\r\n                        break;\r\n                case \"metal\":\r\n                        style = {backgroundColor:\"#A100F1\"};\r\n                        break;\r\n                case \"alkaline earth metal\":\r\n                        style = {backgroundColor : \"yellow\", color:\"black\"};\r\n                        break;\r\n                case \"ametal\":\r\n                        style = {backgroundColor : '#86C7C2', color:\"black\"}\r\n                        break;\r\n                case \"Soygaz\":\r\n                        style = {backgroundColor : \"#00A1FA\"}\r\n                        break;\r\n                case \"lanthanoid\":\r\n                        style = {backgroundColor : \"green\"}\r\n                        break;\r\n                case \"actinoid\":\r\n                        style = {backgroundColor : \"#C5C3B1\", color:\"black\"}\r\n                        break;\r\n                case \"metalloid\":\r\n                        style = {backgroundColor : \"aqua\", color:\"black\"}\r\n                        break;\r\n                case \"Halojen\":\r\n                        style = {backgroundColor : \"#f99290\", color:\"black\"}\r\n                        break;\r\n                default:\r\n                        style = {backgroundColor : \"orangered\"}\r\n        }\r\n        return(\r\n             <div style={style}className={styles.details}>    \r\n             <div className={styles.children}>{props.children}</div>\r\n             <div onClick={props.clicked} className={styles.button}>X</div>\r\n             </div>\r\n        )\r\n    \r\n}\r\n \r\nexport default Popup;","import React from 'react';\r\nimport './App.css';\r\nimport styles from \"./detailsPopup.module.css\"\r\nconst Popup = (props) => {\r\n        return(\r\n             <div onClick={props.clicked}className={styles.backdrop}>    \r\n             </div>\r\n        )\r\n    \r\n}\r\n \r\nexport default Popup;","import React from \"react\";\r\nimport \"./elements.module.css\";\r\nconst Nav = (props) => {\r\n    return(\r\n        <div className=\"groups\">\r\n            <div className=\"group group-1\">Metal</div>\r\n            <div className=\"group group-2\">Alkali Metal</div>\r\n            <div className=\"group group-3\">Toprak Alkali Metal</div>\r\n            <div className=\"group group-4\">Yarı Metal</div>\r\n            <div className=\"group group-5\">Geçiş Metali</div>\r\n            <div className=\"group group-6\">Ametal</div>\r\n            <div className=\"group group-7\">Soygaz</div>\r\n            <div className=\"group group-8\">Halojen</div>\r\n            <div className=\"group group-9\">Lantanit</div>\r\n            <div className=\"group group-10\">Aktinit</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React,{Component} from 'react';\nimport './App.css';\nimport data from \"./csvjson.json\";\nimport DetailsPopup from \"./DetailsPopup\";\nimport Backdrop from \"./Backdrop\";\nimport Nav from \"./Navigation\"\n\nclass App extends Component {\n  state = {\n    showDetails:false,\n  }\n  render(){  \n    //Array Declarations\n    let table = []\n    let tableacts = []\n    let tablelanths = []\n    //Styles\n    const nonmetal = {backgroundColor : '#86C7C2'}\n    const metal = {backgroundColor : \"#A100F1\"}\n    const transitionMetal = {backgroundColor : \"#DF7956\"}\n    const nobleGas = {backgroundColor : \"#00A1FA\"}\n    const metalloid = {backgroundColor : \"aqua\"}\n    const alkaliMetal = {backgroundColor : \"#F100A1\"}\n    const alkaliEarthMetal = {backgroundColor : \"yellow\"}\n    const lanthanoid = {backgroundColor : \"green\"}\n    const actinoid = {backgroundColor : \"#C5C3B1\"}\n    const halogen = {backgroundColor : \"#f99290\"}\n    \n    const propName = {\n      fontWeight : \"bold\"\n    }\n    \n    let clickHandler = (index) => {\n      //console.log(data[index].electronicConfiguration)\n      this.setState({showDetails:true})\n      this.setState({atomicNumber:index,\n                     name:data[index-1].name,\n                     electronicConfiguration:data[index-1].electronicConfiguration,\n                     standardState:data[index-1].standardState,\n                     groupBlock:data[index-1].groupBlock,\n                     bondingType:data[index-1].bondingType,\n                     meltingPoint:(Math.floor(data[index-1].meltingPoint-273.15)) + \" Celsius\", \n                     boilingPoint:(Math.floor(data[index-1].boilingPoint-273.15)) + \" Celsius\",\n                     density:data[index-1].density,\n                     yearDiscovered:data[index-1].yearDiscovered,\n                     electronegativity:data[index-1].electronegativity,\n                     atomicRadius:data[index-1].atomicRadius,\n                     ionRadius:data[index-1].ionRadius,\n                     vanDelWaalsRadius:data[index-1].vanDelWaalsRadius,\n                     electronAffinity:data[index-1].electronAffinity,\n                     popupBackground:data[index-1].groupBlock\n                    }) \n      console.log(this.state)\n    }\n    let closeHandler = () => {\n      this.setState({showDetails:false})\n    }\n    let popup;\n    let backdrop;\n    if(this.state.showDetails){\n      backdrop =<Backdrop clicked={closeHandler}/>\n      popup = <DetailsPopup color={this.state.popupBackground} clicked={closeHandler}>\n        <span style={propName}>Element Adı: </span> {this.state.name}<br/>\n        <span style={propName}>Elektron Dizilimi: </span> {this.state.electronicConfiguration}<br/>\n        <span style={propName}>Standart Fiziksel Hal: </span> {this.state.standardState}<br/>\n        <span style={propName}>Grup Bloğu: </span> {this.state.groupBlock}<br/>\n        <span style={propName}>Bağ Türü: </span> {this.state.bondingType}<br/>\n        <span style={propName}>Erime Noktası: </span>{this.state.meltingPoint}<br/>\n        <span style={propName}>Kaynama Noktası: </span> {this.state.boilingPoint}<br/>\n        <span style={propName}>Yoğunluk: </span> {this.state.density}<br/>\n        <span style={propName}>Keşfedilme Yılı: </span> {this.state.yearDiscovered}<br/>\n        <span style={propName}>Elektronegatiflik: </span>{this.state.electronegativity}<br/>\n        <span style={propName}>Atom Çapı: </span> {this.state.atomicRadius}<br/>\n        <span style={propName}>İyon Çapı: </span> {this.state.ionRadius}<br/>\n        <span style={propName}>Van der Waals Çapı: </span> {this.state.vanDelWaalsRadius}<br/>\n        <span style={propName}>Elektron İlgisi: </span> {this.state.electronAffinity}<br/>\n\n\n\n      </DetailsPopup>\n    }\n    //MAIN TABLE LOOP\n    for(let i=0; i<118; i++){\n  \n      /*switch(i){\n          \n        case 1:\n          table.push(<div className={styles.row1}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n          break;\n        case 4:\n            table.push(<div className={styles.row2}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n        case 12:\n            table.push(<div className={styles.row2}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)  \n            break;\n        case 57:\n            i = 70;\n            break;\n        case 89:\n            i = 102;\n            break;\n        default:\n          table.push(<div><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n      }\n        */\n       switch(data[i].groupBlock){\n        \n        case \"ametal\":\n            table.push(<div className=\"hvr hvr-1\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={nonmetal} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n\n        case \"alkali metal\":\n            table.push(<div className=\"hvr hvr-2\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={alkaliMetal} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n\n        case \"alkaline earth metal\":\n            table.push(<div className=\"hvr hvr-3\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={alkaliEarthMetal} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n\n        case \"Soygaz\":\n          switch(data[i].symbol){\n            case \"He\":\n            table.push(<div className=\"hvr hvr-4 hvr-4-He\" onClick={clickHandler.bind(this,data[i].atomicNumber)} key={data[i].atomicNumber} style={nobleGas} ><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n            default:\n                table.push(<div className=\"hvr hvr-4\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={nobleGas} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n          }\n          break;\n\n        case \"geçiş metali\":\n            table.push(<div className=\"hvr hvr-5\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={transitionMetal} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n\n        case \"Halojen\":\n            table.push(<div className=\"hvr hvr-6\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={halogen} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n            break;\n\n        case \"metalloid\":\n           switch(data[i].symbol){\n             case \"B\":\n                table.push(<div className=\"hvr hvr-7 hvr-7-B\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={metalloid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n                break;\n              default:\n                  table.push(<div className=\"hvr hvr-7\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={metalloid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n           }\n           break;\n\n        case \"metal\":\n            switch(data[i].symbol){\n              case \"Al\":    \n                table.push(<div className=\"hvr hvr-8 hvr-8-AL\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={metal} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)  \n                break;\n              default:\n                table.push(<div className=\"hvr hvr-8\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={metal} key={data[i].atomicNumber}><span className=\"atomicNumber\" key={data[i].atomicNumber}>{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)  \n              }\n              \n              break;\n\n        case \"lanthanoid\":\n            switch(data[i].atomicNumber){\n              case 58:\n                i = 70;\n                break;\n              default:\n                table.push(<div className=\"hvr hvr-9\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={lanthanoid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)              }\n          break;\n\n        case \"actinoid\":\n            switch(data[i].atomicNumber){\n              case 90:\n                i = 102;\n                break;\n              default:\n                table.push(<div className=\"hvr hvr-10\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={actinoid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)              }\n          break;\n\n        default:\n          table.push(<div onClick={clickHandler.bind(this,data[i].atomicNumber)} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n      }\n      \n    }\n    //actinoid loop\t\n    for(let i=57; i<71; i++){\n      tableacts.push(<div className=\"hvr hvr-9\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={lanthanoid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n    }\n    //lanthanoid loop\n    for(let i=89; i<103; i++){\n      tablelanths.push(<div className=\"hvr hvr-10\" onClick={clickHandler.bind(this,data[i].atomicNumber)} style={actinoid} key={data[i].atomicNumber}><span className=\"atomicNumber\">{data[i].atomicNumber}&nbsp;</span>{data[i].symbol}</div>)\n    }\n    //console.log(table)\n    //console.log(tableacts)\n    //console.log(tablelanths)\n\n    //MAIN RETURN\n    return (\n        <React.Fragment>\n          {backdrop}\n          <h3 className=\"header\">Periyodik Tablo</h3>\n          <div className=\"popup\">{popup}</div>\n          <div className=\"app\">{table}</div>\n          <div className=\"acts\">{tableacts}</div>\n          <div className=\"lanths\">{tablelanths}</div>\n          <Nav/>\n        </React.Fragment>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}